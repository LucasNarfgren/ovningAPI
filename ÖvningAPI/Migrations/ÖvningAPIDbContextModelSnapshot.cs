// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ÖvningAPI.Models;

namespace ÖvningAPI.Migrations
{
    [DbContext(typeof(ÖvningAPIDbContext))]
    partial class ÖvningAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ÖvningAPI.Models.Adress", b =>
                {
                    b.Property<int>("AdressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GatuNamn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdressId");

                    b.ToTable("Adresses");

                    b.HasData(
                        new
                        {
                            AdressId = 1,
                            GatuNamn = "Hertings Alle 5A",
                            Kommun = "Falkenberg",
                            PostCode = "311 45"
                        },
                        new
                        {
                            AdressId = 2,
                            GatuNamn = "Varbergs Gatan 17",
                            Kommun = "Varberg",
                            PostCode = "432 00"
                        });
                });

            modelBuilder.Entity("ÖvningAPI.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdressId")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.HasIndex("AdressId");

                    b.HasIndex("SkillId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            AdressId = 1,
                            ConfirmPassword = "hemlis123",
                            FirstName = "Lucas",
                            LastName = "Narfgren",
                            Password = "hemlis123",
                            SkillId = 1
                        },
                        new
                        {
                            PersonId = 2,
                            AdressId = 2,
                            ConfirmPassword = "hemlis123",
                            FirstName = "Johnny",
                            LastName = "Karlsson",
                            Password = "hemlis123",
                            SkillId = 2
                        },
                        new
                        {
                            PersonId = 3,
                            AdressId = 1,
                            ConfirmPassword = "hemlis123",
                            FirstName = "Mimmi",
                            LastName = "Narfgren",
                            Password = "hemlis123",
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("ÖvningAPI.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SkillName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            SkillName = "Trolla"
                        },
                        new
                        {
                            SkillId = 2,
                            SkillName = "Dansa"
                        },
                        new
                        {
                            SkillId = 3,
                            SkillName = "Klösa"
                        });
                });

            modelBuilder.Entity("ÖvningAPI.Models.Person", b =>
                {
                    b.HasOne("ÖvningAPI.Models.Adress", "Adress")
                        .WithMany("Persons")
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ÖvningAPI.Models.Skill", "Skill")
                        .WithMany("Persons")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
